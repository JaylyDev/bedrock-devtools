import { ChatSendBeforeEvent, Player, world } from "@minecraft/server";

enum Biome {
  ocean = 0,
  legacyFrozenOcean = 10,
  deepOcean = 24,
  frozenOcean = 46,
  deepFrozenOcean = 47,
  coldOcean = 44,
  deepColdOcean = 45,
  lukewarmOcean = 42,
  deepLukewarmOcean = 43,
  warmOcean = 40,
  deepWarmOcean = 41,
  river = 7,
  frozenRiver = 11,
  beach = 16,
  stoneBeach = 25,
  coldBeach = 26,
  forest = 4,
  forestHills = 18,
  flowerForest = 132,
  birchForest = 27,
  birchForestHills = 28,
  birchForestMutated = 155,
  birchForestHillsMutated = 156,
  roofedForest = 29,
  roofedForestMutated = 157,
  jungle = 21,
  jungleHills = 22,
  jungleMutated = 149,
  jungleEdge = 23,
  jungleEdgeMutated = 151,
  bambooJungle = 48,
  bambooJungleHills = 49,
  taiga = 5,
  taigaHills = 19,
  taigaMutated = 133,
  coldTaiga = 30,
  coldTaigaHills = 31,
  coldTaigaMutated = 158,
  megaTaiga = 32,
  megaTaigaHills = 33,
  redwoodTaigaMutated = 160,
  redwoodTaigaHillsMutated = 161,
  mushroomIsland = 14,
  mushroomIslandShore = 15,
  swampland = 6,
  swamplandMutated = 134,
  savanna = 35,
  savannaPlateau = 36,
  savannaMutated = 163,
  savannaPlateauMutated = 164,
  plains = 1,
  sunflowerPlains = 129,
  desert = 2,
  desertHills = 17,
  desertMutated = 130,
  icePlains = 12,
  iceMountains = 13,
  icePlainsSpikes = 140,
  extremeHills = 3,
  extremeHillsPlusTrees = 34,
  extremeHillsMutated = 131,
  extremeHillsPlusTreesMutated = 162,
  extremeHillsEdge = 20,
  mesa = 37,
  mesaPlateau = 39,
  mesaPlateauMutated = 167,
  mesaPlateauStone = 38,
  mesaPlateauStoneMutated = 166,
  mesaBryce = 165,
  meadow = 186,
  grove = 185,
  snowySlopes = 184,
  jaggedPeaks = 182,
  frozenPeaks = 183,
  stonyPeaks = 189,
  lushCaves = 187,
  dripstoneCaves = 188,
  deepDark = 190,
  mangroveSwamp = 191,
  hell = 8,
  crimsonForest = 179,
  warpedForest = 180,
  soulsandValley = 178,
  basaltDeltas = 181,
  theEnd = 9,
};

const BiomeLocale = {
  [Biome.ocean]: "Ocean",
  [Biome.legacyFrozenOcean]: "Legacy Frozen Ocean",
  [Biome.deepOcean]: "Deep Ocean",
  [Biome.frozenOcean]: "Frozen Ocean",
  [Biome.deepFrozenOcean]: "Deep Frozen Ocean",
  [Biome.coldOcean]: "Cold Ocean",
  [Biome.deepColdOcean]: "Deep Cold Ocean",
  [Biome.lukewarmOcean]: "Lukewarm Ocean",
  [Biome.deepLukewarmOcean]: "Deep Lukewarm Ocean",
  [Biome.warmOcean]: "Warm Ocean",
  [Biome.deepWarmOcean]: "Deep Warm Ocean",
  [Biome.river]: "River",
  [Biome.frozenRiver]: "Frozen River",
  [Biome.beach]: "Beach",
  [Biome.stoneBeach]: "Stone Beach",
  [Biome.coldBeach]: "Cold Beach",
  [Biome.forest]: "Forest",
  [Biome.forestHills]: "Forest Hills",
  [Biome.flowerForest]: "Flower Forest",
  [Biome.birchForest]: "Birch Forest",
  [Biome.birchForestHills]: "Birch Forest Hills",
  [Biome.birchForestMutated]: "Birch Forest Mutated",
  [Biome.birchForestHillsMutated]: "Birch Forest Hills Mutated",
  [Biome.roofedForest]: "Roofed Forest",
  [Biome.roofedForestMutated]: "Roofed Forest Mutated",
  [Biome.jungle]: "Jungle",
  [Biome.jungleHills]: "Jungle Hills",
  [Biome.jungleMutated]: "Jungle Mutated",
  [Biome.jungleEdge]: "Jungle Edge",
  [Biome.jungleEdgeMutated]: "Jungle Edge Mutated",
  [Biome.bambooJungle]: "Bamboo Jungle",
  [Biome.bambooJungleHills]: "Bamboo Jungle Hills",
  [Biome.taiga]: "Taiga",
  [Biome.taigaHills]: "Taiga Hills",
  [Biome.taigaMutated]: "Taiga Mutated",
  [Biome.coldTaiga]: "Cold Taiga",
  [Biome.coldTaigaHills]: "Cold Taiga Hills",
  [Biome.coldTaigaMutated]: "Cold Taiga Mutated",
  [Biome.megaTaiga]: "Mega Taiga",
  [Biome.megaTaigaHills]: "Mega Taiga Hills",
  [Biome.redwoodTaigaMutated]: "Redwood Taiga Mutated",
  [Biome.redwoodTaigaHillsMutated]: "Redwood Taiga Hills Mutated",
  [Biome.mushroomIsland]: "Mushroom Island",
  [Biome.mushroomIslandShore]: "Mushroom Island Shore",
  [Biome.swampland]: "Swampland",
  [Biome.swamplandMutated]: "Swampland Mutated",
  [Biome.savanna]: "Savanna",
  [Biome.savannaPlateau]: "Savanna Plateau",
  [Biome.savannaMutated]: "Savanna Mutated",
  [Biome.savannaPlateauMutated]: "Savanna Plateau Mutated",
  [Biome.plains]: "Plains",
  [Biome.sunflowerPlains]: "Sunflower Plains",
  [Biome.desert]: "Desert",
  [Biome.desertHills]: "Desert Hills",
  [Biome.desertMutated]: "Mutated Desert",
  [Biome.icePlains]: "Ice Plains",
  [Biome.iceMountains]: "Ice Mountains",
  [Biome.icePlainsSpikes]: "Ice Plains Spikes",
  [Biome.extremeHills]: "Extreme Hills",
  [Biome.extremeHillsPlusTrees]: "Extreme Hills+",
  [Biome.extremeHillsMutated]: "Mutated Extreme Hills",
  [Biome.extremeHillsPlusTreesMutated]: "Mutated Extreme Hills+",
  [Biome.extremeHillsEdge]: "Extreme Hills Edge",
  [Biome.mesa]: "Mesa",
  [Biome.mesaPlateau]: "Mesa Plateau",
  [Biome.mesaPlateauMutated]: "Mutated Mesa Plateau",
  [Biome.mesaPlateauStone]: "Mesa Plateau F",
  [Biome.mesaPlateauStoneMutated]: "Mutated Mesa Plateau F",
  [Biome.mesaBryce]: "Mesa Bryce",
  [Biome.meadow]: "Meadow",
  [Biome.grove]: "Grove",
  [Biome.snowySlopes]: "Snowy Slopes",
  [Biome.jaggedPeaks]: "Jagged Peaks",
  [Biome.frozenPeaks]: "Frozen Peaks",
  [Biome.stonyPeaks]: "Stony Peaks",
  [Biome.lushCaves]: "Lush Caves",
  [Biome.dripstoneCaves]: "Dripstone Caves",
  [Biome.deepDark]: "Deep Dark",
  [Biome.mangroveSwamp]: "Mangrove Swamp",
  [Biome.hell]: "Nether",
  [Biome.crimsonForest]: "Crimson Forest",
  [Biome.warpedForest]: "Warped Forest",
  [Biome.soulsandValley]: "Soul Sand Valley",
  [Biome.basaltDeltas]: "Basalt Deltas",
  [Biome.theEnd]: "The End",
}

const biomeObjectiveId = "jayly:biome";
const showErrorMessage = (player: Player) => player.sendMessage("§cFailed to retrieve current biome you're in.");
const showResult = (player: Player, biome: string) => player.sendMessage(`Biome: §a${biome}`);

export function execute(event: ChatSendBeforeEvent) {
  const { sender } = event;
  event.cancel = true;

  const biomeObjective = world.scoreboard.getObjective(biomeObjectiveId);
  if (!sender.scoreboardIdentity) {
    showErrorMessage(sender);
    return;
  }
  const biome = biomeObjective.getScore(sender.scoreboardIdentity) as Biome;

  // Check if player is in valid biomes, if not throw error.
  if (Object.keys(BiomeLocale).includes(biome.toString())) showResult(sender, BiomeLocale[biome]);
  else showErrorMessage(sender);
};

// register scoreboard on world initialize
world.events.worldInitialize.subscribe(() => {
  world.scoreboard.getObjective(biomeObjectiveId) ??
    world.scoreboard.addObjective(biomeObjectiveId, biomeObjectiveId);
});
